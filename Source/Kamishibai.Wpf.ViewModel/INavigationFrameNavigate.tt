<#@ template debug="false" hostspecific="false" language="C#" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ output extension=".cs" #>
namespace Kamishibai.Wpf.ViewModel;

public partial interface INavigationFrame
{
<#
for(int i = 1; i <= 2; i++)
{
    var typeArguments = string.Join(", ", Enumerable.Range(1, i).Select(x => $"T{x}"));
    var methodArguments = string.Join(", ", Enumerable.Range(1, i).Select(x => $"T{x} param{x}"));
#>
    public Task<bool> TryNavigateAsync<TViewModel, <#= typeArguments #>>(<#= methodArguments #>) where TViewModel : class, INavigatingAsyncAware<<#= typeArguments #>>;
<#
}
#>
}
