// ------------------------------------------------------------------------------
// <auto-generated>
//     このコードはツールによって生成されました。
//     ランタイム バージョン: 17.0.0.0
//  
//     このファイルへの変更は、正しくない動作の原因になる可能性があり、
//     コードが再生成されると失われます。
// </auto-generated>
// ------------------------------------------------------------------------------
namespace Kamishibai.Wpf.CodeAnalysis.Generator
{
    using System.Linq;
    using System.Text;
    using System.Collections.Generic;
    using System;
    
    /// <summary>
    /// Class to produce the template output
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.TextTemplating", "17.0.0.0")]
    public partial class NavigationServiceTemplate : TemplateBase
    {
        /// <summary>
        /// Create the template output
        /// </summary>
        public override string TransformText()
        {
            this.Write("using Kamishibai.Wpf.ViewModel;\r\n\r\nnamespace ");
            this.Write(this.ToStringHelper.ToStringWithCulture(Namespace));
            this.Write(";\r\n\r\npublic partial interface INavigationService\r\n{\r\n    public Task<bool> Naviga" +
                    "teAsync<TViewModel>(string frameName = \"\") where TViewModel : class;\r\n    public" +
                    " Task<bool> NavigateAsync<TViewModel>(TViewModel viewModel, string frameName = \"" +
                    "\") where TViewModel : class;\r\n    public Task<bool> NavigateAsync<TViewModel>(Ac" +
                    "tion<TViewModel> init, string frameName = \"\") where TViewModel : class;\r\n    Tas" +
                    "k<bool> NavigateToSafeContentPage(int count, string frameName = \"\");\r\n    Task<b" +
                    "ool> GoBackAsync(string frameName = \"\");\r\n}\r\n\r\npublic class NavigationService : " +
                    "INavigationService\r\n{\r\n    private readonly INavigationFrameProvider _navigation" +
                    "FrameProvider;\r\n    private readonly IServiceProvider _serviceProvider;\r\n\r\n    p" +
                    "ublic NavigationService(IServiceProvider serviceProvider, INavigationFrameProvid" +
                    "er navigationFrameProvider)\r\n    {\r\n        _serviceProvider = serviceProvider;\r" +
                    "\n        _navigationFrameProvider = navigationFrameProvider;\r\n    }\r\n\r\n    publi" +
                    "c Task<bool> NavigateAsync<TViewModel>(string frameName = \"\") where TViewModel :" +
                    " class\r\n    {\r\n        return _navigationFrameProvider\r\n            .GetNavigati" +
                    "onFrame(frameName)\r\n            .NavigateAsync<TViewModel>(_serviceProvider);\r\n " +
                    "   }\r\n\r\n    public Task<bool> NavigateAsync<TViewModel>(TViewModel viewModel, st" +
                    "ring frameName = \"\") where TViewModel : class\r\n    {\r\n        return _navigation" +
                    "FrameProvider\r\n            .GetNavigationFrame(frameName)\r\n            .Navigate" +
                    "Async(viewModel, _serviceProvider);\r\n    }\r\n\r\n    public Task<bool> NavigateAsyn" +
                    "c<TViewModel>(Action<TViewModel> init, string frameName = \"\") where TViewModel :" +
                    " class\r\n    {\r\n        return _navigationFrameProvider\r\n            .GetNavigati" +
                    "onFrame(frameName)\r\n            .NavigateAsync(init, _serviceProvider);\r\n    }\r\n" +
                    "\r\n    public Task<bool> NavigateToSafeContentPage(int count, string frameName)\r\n" +
                    "    {\r\n        return NavigateAsync(\r\n            new ContentPageViewModel(count" +
                    ", frameName, this), \r\n            frameName);\r\n    }\r\n\r\n    public Task<bool> Go" +
                    "BackAsync(string frameName = \"\")\r\n    {\r\n        return _navigationFrameProvider" +
                    "\r\n            .GetNavigationFrame(frameName)\r\n            .GoBackAsync();\r\n    }" +
                    "\r\n}");
            return this.GenerationEnvironment.ToString();
        }
    }
}
