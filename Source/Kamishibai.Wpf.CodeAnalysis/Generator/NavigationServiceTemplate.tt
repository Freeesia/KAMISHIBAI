<#@ template debug="false" hostspecific="false" language="C#" inherits="TemplateBase" linePragmas="false" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ output extension=".cs" #>
using Kamishibai.Wpf;

namespace <#= Namespace #>;

public partial interface INavigationService : INavigationServiceBase
{
<#
foreach(var navigationInfo in NavigationInfos)
{
#>
    public Task<bool> NavigateTo<#= navigationInfo.NavigationName #>Async(<#= navigationInfo.NavigationParameters #>);
<#  
}
#>
}

public class NavigationService : NavigationServiceBase, INavigationService
{
    private readonly IServiceProvider _serviceProvider;

    public NavigationService(IServiceProvider serviceProvider, INavigationFrameProvider navigationFrameProvider)
        : base (serviceProvider, navigationFrameProvider)
    {
        _serviceProvider = serviceProvider;
    }

<#
foreach(var navigationInfo in NavigationInfos)
{
#>
    public Task<bool> NavigateTo<#= navigationInfo.NavigationName #>Async(<#= navigationInfo.NavigationParameters #>)
    {
        return NavigateAsync(
            new <#= navigationInfo.ViewModelName #>(
                <#= navigationInfo.ConstructorParameters #>
            ), 
            frameName);
    }

<#  
}
#>
}